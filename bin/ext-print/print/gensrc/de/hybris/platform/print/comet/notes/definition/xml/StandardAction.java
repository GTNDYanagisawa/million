//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.18 at 01:26:23 PM JST 
//


package de.hybris.platform.print.comet.notes.definition.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for standardAction.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="standardAction">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="update placeholder"/>
 *     &lt;enumeration value="save placeholder"/>
 *     &lt;enumeration value="delete group"/>
 *     &lt;enumeration value="new group"/>
 *     &lt;enumeration value="delete info"/>
 *     &lt;enumeration value="new info"/>
 *     &lt;enumeration value="create snippet"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "standardAction", namespace = "http://comet.werk-ii.com/psc_notes")
@XmlEnum
public enum StandardAction {

    @XmlEnumValue("update placeholder")
    UPDATE_PLACEHOLDER("update placeholder"),
    @XmlEnumValue("save placeholder")
    SAVE_PLACEHOLDER("save placeholder"),
    @XmlEnumValue("delete group")
    DELETE_GROUP("delete group"),
    @XmlEnumValue("new group")
    NEW_GROUP("new group"),
    @XmlEnumValue("delete info")
    DELETE_INFO("delete info"),
    @XmlEnumValue("new info")
    NEW_INFO("new info"),
    @XmlEnumValue("create snippet")
    CREATE_SNIPPET("create snippet");
    private final String value;

    StandardAction(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StandardAction fromValue(String v) {
        for (StandardAction c: StandardAction.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
